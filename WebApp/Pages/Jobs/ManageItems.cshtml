@page
@using Microsoft.AspNetCore.Html
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using WebApp.MyLibraries
@model WebApp.Pages.Jobs.ManageItems

@{
    ViewData["Title"] = "Manage job items";
}

<h2>Manage items for Job @Model.Entity.Name</h2>

<div class="row justify-content-center">
    <div class="col-md-5">
        <h4>Items in Job</h4>
        <div>
            Total price: @Model.Entity.TotalPrice
        </div>
        @if (Model.Entity.JobItems!.Count > 0)
        {
            <div class="d-flex flex-column @CssCombos.ExternalContainer">
                @foreach (var jobItem in Model.Entity.JobItems)
                {
                    <div class="@CssCombos.InnerContainer">
                        Name: @jobItem.Item!.Name
                        <form method="post">
                            @Html.HiddenFor(m => m.Id)
                            @WebUtils.HiddenFor(Html, m => m.JobItemId, jobItem.Id)
                            Quantity: @WebUtils.TextBoxFor(Html, m => m.JobItemQuantity, jobItem.Quantity, "w-smallish")
                            @WebUtils.ButtonPrimaryFor(Html, m => m.UpdateJobItem, "Update")
                            @WebUtils.ButtonDangerFor(Html, m => m.RemoveJobItem, "Remove")
                        </form>
                    </div>
                }
            </div>
        }
        else
        {
            <div>No items!</div>
        }
    </div>
    <div class="col-md-5">
        <h4>Other items</h4>
        <div>
            <a class="btn btn-primary" asp-page="/Items/Create" asp-route-ReturnToJobId="@Model.Id">Create new item</a>
        </div>
        @{
            ViewData["HiddenFields"] = new List<IHtmlContent>
            {
                Html.HiddenFor(m => m.Id)
            };
            await Html.RenderPartialAsync("Shared/ItemSearch");
        }
        @if (Model.Items.Count > 0)
        {
            <div class="d-flex flex-column @CssCombos.ExternalContainer">
                @foreach (var item in Model.Items)
                {
                    <div class="@CssCombos.InnerContainer">
                        Name: @item.Name
                        <form method="post" class="d-flex gap-2">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            @Html.HiddenFor(m => m.Id)
                            @WebUtils.HiddenFor(Html, m => m.JobItem.JobId, Model.Entity.Id)
                            @WebUtils.HiddenFor(Html, m => m.JobItem.ItemId, item.Id)
                            <div class="form-group d-flex gap-1">
                                Quantity: <input asp-for="JobItem.Quantity" class="form-control w-smallish"/>
                                <span asp-validation-for="JobItem.Quantity" class="text-danger"></span>
                            </div>
                            @WebUtils.ButtonSuccessFor(Html, m => m.AddJobItem, "Add")
                        </form>
                    </div>
                }
            </div>
        }
        else
        {
            <div>No items!</div>
        }
    </div>
</div>