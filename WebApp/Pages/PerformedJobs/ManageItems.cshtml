@page
@using Microsoft.AspNetCore.Html
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using WebApp.MyLibraries
@model WebApp.Pages.PerformedJobs.ManageItems

@{
    ViewData["Title"] = "Manage performed job items";
}

@{ await Html.RenderPartialAsync("Shared/ErrorView"); }

@if (Model.Entity.Performed != null)
{
    <div class="row justify-content-center">
        <div class="col-md-5 text-center">
            <h4>Items used</h4>
            <h6>Total price: @Model.Entity.UsedItems!.Sum(ui => ui.TotalCost)</h6>
            @if (Model.Entity.UsedItems!.Count > 0)
            {
                <div class="d-flex justify-content-center">
                    @foreach (var item in Model.Entity.UsedItems!)
                    {
                        <div class="border border-1 rounded-3 p-2">
                            <div>Name: @item.Item!.Name</div>
                            <div>Quantity: @item.Quantity</div>
                            <div>Price: @item.Item!.Price</div>
                        </div>
                    }
                </div>
            }
            else
            {
                <h3>No items!</h3>
            }
        </div>
    </div>
}
else
{
    @if (Model.MissingItems.Count == 0)
    {
        <a class="btn btn-outline-danger mb-4" asp-page="./Perform" asp-route-id="@Model.Id">Perform job (will consume items and disable further editing!)</a>
    }
    else
    {
        <div class="btn btn-outline-danger fake-btn mb-4">Can't perform job (items missing from stock)</div>
    }
    <div>
        @{
            await Html.RenderPartialAsync("Shared/MissingItems");
        }
    </div>
    <div class="row justify-content-center">
        <div class="col-md-5">
            <h4>Items used</h4>
            <h6>Total price: @Model.Entity.UsedItems!.Sum(ui => ui.TotalCost)</h6>
            <div class="@CssCombos.ExternalContainer mt-4">
                @foreach (var item in Model.Entity.UsedItems!)
                {
                    <div class="@CssCombos.InnerContainer">
                        Item: @item.Item!.Name, Price: @item.Item.Price, Amount available: @item.Item.Quantity
                        <form method="post">
                            @Html.HiddenFor(m => m.Id)
                            @WebUtils.HiddenFor(Html, m => m.UsedItemId, item.Id)
                            @WebUtils.TextBoxFor(Html, m => m.UpdatedQuantity, item.Quantity)
                            @WebUtils.ButtonPrimaryFor(Html, m => m.UpdateUsedItem, "Update")
                            @WebUtils.ButtonDangerFor(Html, m => m.RemoveUsedItem, "Remove")
                        </form>
                    </div>
                }
            </div>
        </div>
        <div class="col-md-5">
            <h4>Other items</h4>
            @{
                ViewData["HiddenFields"] = new List<IHtmlContent>
                {
                    Html.HiddenFor(m => m.Id)
                };
                await Html.RenderPartialAsync("Shared/ItemSearch");
            }
            <div class="@CssCombos.ExternalContainer d-flex flex-column mt-4">
                @foreach (var item in Model.UnusedItems)
                {
                    <div class="@CssCombos.InnerContainer d-flex gap-3">
                        Name: @item.Name, Price: @item.Price, Amount available: @item.Quantity
                        <form method="post" class="d-flex gap-3">
                            @Html.HiddenFor(m => m.Id)
                            @WebUtils.HiddenFor(Html, m => m.UsedItem.ItemId, item.Id)
                            @WebUtils.HiddenFor(Html, m => m.UsedItem.PerformedJobId, Model.Entity.Id)
                            <dpan class="form-group d-flex gap-1">
                                <label asp-for="UsedItem.Quantity" class="control-label">Quantity: </label>
                                <input asp-for="UsedItem.Quantity" class="form-control w-smallish"/>
                                <span asp-validation-for="UsedItem.Quantity" class="text-danger"></span>
                            </dpan>
                            @WebUtils.ButtonSuccessFor(Html, m => m.AddUsedItem, "Add")
                        </form>
                    </div>
                }
            </div>
        </div>
    </div>
}